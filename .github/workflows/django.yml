name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Push Docker Image to Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          script: |
            docker build -t django_image .
            docker tag django_image ${{ secrets.DOCKER_USERNAME }}/django_image:latest
            docker push ${{ secrets.DOCKER_USERNAME }}/django_image:latest

      - name: Check if Docker container is running
        id: check-container
        run: |
          if sudo docker ps -f "name=flamboyant_villani" --format "{{.Image}}" | grep -q "***/django_image:latest"; then
            echo "Container is already running"
            echo "::set-output name=container_running::true"
            sudo docker restart flamboyant_villani
          else
            echo "Container is not running"
            echo "::set-output name=container_running::false"
          fi

      - name: SSH into EC2 and deploy Docker container
        if: steps.check-container.outputs.container_running == 'false'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Building the container"
            # Log in to Docker Hub
            sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            
            # Pull and run the Docker image
            ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/django_image:latest
            sudo docker run -d -p 80:8000 ${{ secrets.DOCKER_USERNAME }}/django_image:latest
